# For locating the local Sleuthkit install, choose one of the
# following two options.  If you have no Sleuthkit install at all, get
# e.g.
# http://sourceforge.net/projects/sleuthkit/files/sleuthkit/4.1.3/sleuthkit-4.1.3.tar.gz
# and proceed to 'configure;make;make install'

# When Sleuthkit built in a local playpen and the 'make install' step above 
# NOT done, the headers and libraries are located as indicated:
#TSK_INSTALL=/home/stuart/playpen/sleuthkit-4.1.3
#TSK_CPPFLAGS=-I$(TSK_INSTALL)
#TSK_LDLIBS_STATIC=-static $(TSK_INSTALL)/tsk/.libs/libtsk.a -dynamic -lstdc++
#TSK_LDLIBS_SHARED=-L$(TSK_INSTALL)/tsk/.libs -ltsk -lstdc++

# When Sleuthkit built and installed in its default way
TSK_INSTALL=/usr
TSK_CPPFLAGS=-I$(TSK_INSTALL)/include
TSK_LDLIBS_SHARED=-L$(TSK_INSTALL)/lib64/ -ltsk -lewf -lstdc++
TSK_LDLIBS_STATIC=$(TSK_INSTALL)/lib64/libtsk.a $(TSK_INSTALL)/lib64/libewf.a -lstdc++

# Set this according to your preferred build.  A static build links
# all the tsk routines into our .so, by locating the tsk .a file.  A
# shared build results in a runtime dependency on libtsk.so and the
# possible need for LD_LIBRARY_PATH, e.g.
#
# $ LD_LIBRARY_PATH=/usr/local/lib java -classpath SOMEJAR SOMECLASS

# To eliminate this extra step, I prefer the static build. The
# resulting tsk4j.so file is of course bigger in this case.

TSK_LDLIBS=$(TSK_LDLIBS_STATIC)
#TSK_LDLIBS=$(TSK_LDLIBS_SHARED)

# eof

