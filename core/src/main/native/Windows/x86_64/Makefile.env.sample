# Get sleuthkit from
# https://github.com/sleuthkit/sleuthkit/releases/download/sleuthkit-4.12.0/sleuthkit-4.12.0.tar.gz
# and (optionally) libewf from
# https://github.com/libyal/libewf-legacy/releases/download/20140814/libewf-20140814.tar.gz
# and proceed to 'configure --host=x86_64-w64-mingw32;make;make install' (libewf first, then sleuthkit).

# When Sleuthkit built and installed in its default way
TSK_INSTALL=/usr/local
TSK_CPPFLAGS=-I$(TSK_INSTALL)/include
TSK_LDLIBS_SHARED=-L$(TSK_INSTALL)/lib/ -ltsk -lewf
TSK_LDLIBS_STATIC=$(TSK_INSTALL)/lib/libtsk.a $(TSK_INSTALL)/lib/libewf.a

# Set this according to your preferred build.  A static build links
# all the tsk routines into our .so, by locating the tsk .a file.  A
# shared build results in a runtime dependency on libtsk.so and the
# possible need for LD_LIBRARY_PATH, e.g.
#
# $ LD_LIBRARY_PATH=/usr/local/lib java -classpath SOMEJAR SOMECLASS

# To eliminate this extra step, I prefer the static build. The
# resulting tsk4j.so file is of course bigger in this case.

TSK_LDLIBS=$(TSK_LDLIBS_STATIC)
#TSK_LDLIBS=$(TSK_LDLIBS_SHARED)

SHELL = C:/cygwin64/bin/bash
JDK_HOME = C:/jdk-8.0.372.7-hotspot

# eof

